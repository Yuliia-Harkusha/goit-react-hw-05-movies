{"version":3,"file":"static/js/249.0aed3d1d.chunk.js","mappings":"gSAEaA,EAAOC,EAAAA,GAAAA,GAAH,uHAOJC,EAAQD,EAAAA,GAAAA,IAAH,6EAMLE,EAAOF,EAAAA,GAAAA,EAAH,wF,SCXJG,EAAW,SAAC,GACvB,OADoC,EAAXC,KACbC,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9C,OACE,0BACGF,GACC,SAACL,EAAD,CAAOQ,IAAG,UAPJ,oCAOI,OAAeH,GAAgBI,IAAKH,KAE9C,gBAAKE,IAAI,GAAGC,IAAKH,KAEnB,SAACL,EAAD,UAAOK,KACP,UAACL,EAAD,yBAAkBM,QAPXG,EAAAA,EAAAA,MAUZ,GACF,ECXc,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uFACXH,EADW,iEAKdD,GAAa,GALC,UAMKK,EAAAA,EAAAA,IAAcJ,GANnB,OAMRK,EANQ,OAOdV,EAAQU,GAPM,kDASdR,EAAS,EAAD,IATM,yBAWdE,GAAa,GAXC,6EAAH,qDAcfI,GACD,GAAE,CAACH,KAGF,UAACpB,EAAD,WACGkB,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAS,gDACTX,IAAQ,SAACD,EAAD,CAAUC,KAAMA,EAAKA,SAGnC,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 250px;\n  height: auto;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  margin-bottom: 5px;\n  margin-top: 8px;\n`;\n","import { nanoid } from 'nanoid';\nimport { Image, Name } from './Cast.styled';\nconst IMG_URL = 'https://images.tmdb.org/t/p/w500';\n\nexport const CastItem = ({ cast }) => {\n  return cast.map(({ profile_path, original_name, character }) => {\n    return (\n      <li key={nanoid()}>\n        {profile_path ? (\n          <Image src={`${IMG_URL}${profile_path}`} alt={original_name} />\n        ) : (\n          <img src=\"\" alt={original_name} />\n        )}\n        <Name>{original_name}</Name>\n        <Name>Character: {character}</Name>\n      </li>\n    );\n  });\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieCasts } from 'services/api';\nimport { CastItem } from './CastItem';\nimport { List } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      if (!id) {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const data = await getMovieCasts(id);\n        setCast(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {cast && <CastItem cast={cast.cast} />}\n    </List>\n  );\n}\n"],"names":["List","styled","Image","Name","CastItem","cast","map","profile_path","original_name","character","src","alt","nanoid","Cast","useState","setCast","error","setError","isLoading","setIsLoading","id","useParams","useEffect","fetchCast","getMovieCasts","data","Loader"],"sourceRoot":""}