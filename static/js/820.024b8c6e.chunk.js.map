{"version":3,"file":"static/js/820.024b8c6e.chunk.js","mappings":"0RAOe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uFACZH,EADY,iEAKfR,GAAa,GALE,UAMIY,EAAAA,EAAAA,IAAgBJ,GANpB,OAMTK,EANS,OAOff,EAAUe,GAPK,kDASfX,EAAS,EAAD,IATO,yBAWfF,GAAa,GAXE,6EAAH,qDAchBW,GACD,GAAE,CAACH,IAEJ,IAKMM,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAEC,iBACoB,KAAlBb,EAAOc,OAFQ,uBAGjBC,MAAM,0BAHW,0CAOjBlB,GAAa,GAPI,UAQEY,EAAAA,EAAAA,IAAgBT,GARlB,OAQXU,EARW,OASjBf,EAAUe,EAAKM,SATE,kDAWjBjB,EAAS,EAAD,IAXS,yBAajBF,GAAa,GAbI,6EAAH,sDAiBlB,OACE,6BACE,kBAAMoB,SAAUN,EAAhB,WACE,kBACEO,SA1Ba,SAAAN,GACnBX,EAAUW,EAAEO,OAAOC,MAAMC,cAAcP,QACvCV,EAAgBJ,EACjB,EAwBOsB,KAAK,OACLC,aAAa,MACbC,YAAY,kBAEd,6BACE,SAAC,MAAD,UAGJ,0BACG5B,IAAa,SAAC,IAAD,IACbE,IAAS,gDACTJ,IAAU,SAAC,IAAD,CAAYA,OAAQA,SAItC,C","sources":["pages/Movies/Movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { getSearchMovies } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const data = await getSearchMovies(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [query]);\n\n  const handleChange = e => {\n    setSearch(e.target.value.toLowerCase().trim());\n    setSearchParams(search);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (search.trim() === '') {\n      alert('Enter a search request');\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const data = await getSearchMovies(search);\n      setMovies(data.results);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n        />\n        <button>\n          <FaSearch />\n        </button>\n      </form>\n      <ul>\n        {isLoading && <Loader />}\n        {error && <p>Something went wrong</p>}\n        {movies && <MoviesList movies={movies} />}\n      </ul>\n    </main>\n  );\n}\n"],"names":["Movies","useState","movies","setMovies","isLoading","setIsLoading","error","setError","search","setSearch","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovie","getSearchMovies","data","handleSubmit","e","preventDefault","trim","alert","results","onSubmit","onChange","target","value","toLowerCase","type","autoComplete","placeholder"],"sourceRoot":""}